Spring MVC + MyBatis

MyBatis
	- iBatis
	- JDBC와 마찬가지로 응용 프로그램과 데이터베이스를 연결시켜주는 중간 계층
		- 추상화
		- 데이터 관리 난이도 낮아짐(생산성 향상)
		- 영속성 데이터 관리 계층
		- 데이터 퍼시스턴스(Data Persistence) 	계층
		- 응용프로그램 <-> JDBC(MyBatis) <-> 데이터베이스
	- SQL을 프로그래밍 코드와 별도로 관리(XML(***), 어노테이션)
	- Spring JDBC와 마찬가지로 반복적인 코드를 많이 생략


MyBatis 세팅
	1. pom.xml 수정
		- *.jar x 5개
		- 필요한 자르파일 다운받기
		
	2. root-context.xml 수정
		- webapp > WEB-INF > spring
		- 데이터 소스 객체(연결 정보) + MyBatis 설정 객체 + Template 객체
	
	3. mybatis.xml 설정
		- 위치 & 파일명은 자유
		
	4. Mapper 파일 생성
		
		

log4j 사용
- 여러가지 로그 출력가능
- DB작업과 관련된 로그 출력(***). 많이 쓴다.
- MyBatis의 작업을 로그로 출력

1. pom.xml
	- 디펜던시에 log4jdbc-remix 추가
2. log4j.xml 설정
	- 출력하려는 로그 + 로그 포맷 설정
	- 개인입맛에 맞추어 수정 (구글링)
3. root-context.xml 수정
	- JDBC(BasicDataSource) -> SqlSessionFactory -> SqlSessionTemplate : 사용
	- JDBC(BasicDataSource) -> log4j -> SqlSessionFactory -> SqlSessionTemplate : 사용
		//사이에서 대기탔다가, 특정작업에 대한 로그를 남김. "야! 방금 셀릭트가 발생했어!"













		